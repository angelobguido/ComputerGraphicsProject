import numpy as np
from utils.block_types import *

house_arrange = np.array([
        [  
            [BRICK, BRICK, BRICK, BRICK, BRICK, BRICK, BRICK],
            [BRICK, BRICK, BRICK, BRICK, BRICK, BRICK, BRICK],
            [BRICK, BRICK, BRICK, BRICK, BRICK, BRICK, BRICK],
            [BRICK, BRICK, BRICK, BRICK, BRICK, BRICK, BRICK],
            [BRICK, BRICK, BRICK, BRICK, BRICK, BRICK, BRICK],
            [BRICK, BRICK, BRICK, BRICK, BRICK, BRICK, BRICK],
            [BRICK, BRICK, BRICK, BRICK, BRICK, BRICK, BRICK],
            [BRICK, BRICK, BRICK, BRICK, BRICK, BRICK, BRICK],
            [BRICK, BRICK, BRICK, BRICK, BRICK, BRICK, BRICK],
            [BRICK, BRICK, BRICK, BRICK, BRICK, BRICK, BRICK]
        ],
        [
            
            [BRICK, BRICK, BRICK, BRICK, BRICK, BRICK, BRICK],
            [BRICK, NONE, NONE, NONE, NONE, NONE, GLASS],
            [BRICK, NONE, NONE, NONE, NONE, NONE, GLASS],
            [BRICK, NONE, NONE, NONE, NONE, NONE, GLASS],
            [BRICK, NONE, NONE, NONE, NONE, NONE, GLASS],
            [BRICK, NONE, NONE, NONE, NONE, NONE, GLASS],
            [BRICK, NONE, NONE, NONE, NONE, NONE, GLASS],
            [BRICK, NONE, NONE, NONE, NONE, NONE, GLASS],
            [BRICK, NONE, NONE, NONE, NONE, NONE, GLASS],
            [BRICK, BRICK, BRICK, BRICK, BRICK, BRICK, BRICK]
        ],
        [
            [BRICK, BRICK, BRICK, BRICK, BRICK, BRICK, BRICK],
            [BRICK, NONE, NONE, NONE, NONE, NONE, GLASS],
            [BRICK, NONE, NONE, NONE, NONE, NONE, GLASS],
            [BRICK, NONE, NONE, NONE, NONE, NONE, GLASS],
            [BRICK, NONE, NONE, NONE, NONE, NONE, GLASS],
            [BRICK, NONE, NONE, NONE, NONE, NONE, GLASS],
            [BRICK, NONE, NONE, NONE, NONE, NONE, GLASS],
            [BRICK, NONE, NONE, NONE, NONE, NONE, GLASS],
            [BRICK, NONE, NONE, NONE, NONE, NONE, GLASS],
            [BRICK, GLASS, BRICK, NONE, BRICK, GLASS, BRICK]
        ],
        [
            [BRICK, BRICK, BRICK, BRICK, BRICK, BRICK, BRICK],
            [BRICK, NONE, NONE, NONE, NONE, NONE, GLASS],
            [BRICK, NONE, NONE, NONE, NONE, NONE, GLASS],
            [BRICK, NONE, NONE, NONE, NONE, NONE, GLASS],
            [BRICK, NONE, NONE, NONE, NONE, NONE, GLASS],
            [BRICK, NONE, NONE, NONE, NONE, NONE, GLASS],
            [BRICK, NONE, NONE, NONE, NONE, NONE, GLASS],
            [BRICK, NONE, NONE, NONE, NONE, NONE, GLASS],
            [BRICK, NONE, NONE, NONE, NONE, NONE, GLASS],
            [BRICK, GLASS, BRICK, NONE, BRICK, GLASS, BRICK]
        ],
        [
            [BRICK, BRICK, BRICK, BRICK, BRICK, BRICK, BRICK],
            [BRICK, BRICK, BRICK, BRICK, BRICK, BRICK, BRICK],
            [BRICK, BRICK, BRICK, BRICK, BRICK, BRICK, BRICK],
            [BRICK, BRICK, BRICK, BRICK, BRICK, BRICK, BRICK],
            [BRICK, BRICK, BRICK, BRICK, BRICK, BRICK, BRICK],
            [BRICK, BRICK, BRICK, BRICK, BRICK, BRICK, BRICK],
            [BRICK, BRICK, BRICK, BRICK, BRICK, BRICK, BRICK],
            [BRICK, BRICK, BRICK, BRICK, BRICK, BRICK, BRICK],
            [BRICK, BRICK, BRICK, BRICK, BRICK, BRICK, BRICK],
            [BRICK, BRICK, BRICK, BRICK, BRICK, BRICK, BRICK]
        ]
])

floor_arrange = np.array([
    [  
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS],
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS],
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS],
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS],
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS],
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS],
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS],
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS],
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS],
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS],
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS],
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS],
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS],
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS],
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS],
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS],
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS],
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS],
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS],
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS],
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS],
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS],
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS],
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS],
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS],
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS],
        [GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS]
    ]
])

tree_arrange = np.array([
    [  
        [NONE, LEAVES, NONE],
        [LEAVES, LEAVES, LEAVES],
        [NONE, LEAVES, NONE]
    ],
    [
        
        [LEAVES, LEAVES, LEAVES],
        [LEAVES, LOG, LEAVES],
        [LEAVES, LEAVES, LEAVES]
    ],
    [
        
        [LEAVES, LEAVES, LEAVES],
        [LEAVES, LOG, LEAVES],
        [LEAVES, LEAVES, LEAVES]
    ],
    [
        [NONE, NONE, NONE],
        [NONE, LOG, NONE],
        [NONE, NONE, NONE]
    ],
    [
        [NONE, NONE, NONE],
        [NONE, LOG, NONE],
        [NONE, NONE, NONE]
    ]
])
